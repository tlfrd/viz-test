<div class="buttons-container">
  <button id="taskButton" class="btn btn-primary" onclick="startTask()" disabled>Start Task</button>
  <span class="button-inline" id="json_submit">
    <% if (@position.to_i + 1) <= @experiment_tasks.length  %>
      <%= button_to "Submit Task", experiment_preview_path(experiment_id: @experiment.id , position: (@position.to_i + 1)), method: :get, class: "btn btn-success" %>
    <% else %>
      <%= button_to "Finish Preview", @experiment, method: :get, class: "btn btn-success" %>
    <% end %>
  </span>
</div>

<div class="visualisation">
  <%= @visualisation.html.html_safe %>
</div>

<input id="request_result" hidden></input>

<div id="results"></div>

<script>

  document.getElementById("json_submit").style.display = "none";
  document.getElementById("taskDescription").innerHTML = "<strong><%= @task.description %></strong>";

  var numberOfClicksAllowed = <%= @task.no_of_clicks %>;
  var numberOfClicks = 0;
  var taskActive = false;

  var coverElement;
  var selected_svg;

  // store results for the task
  var results = {};

  var s1 = new StopWatch();

  function startTask() {
    d3.selectAll(".click-circle").remove();
    taskActive = true;
    document.getElementById("results").innerHTML = "";
    document.getElementById("taskButton").disabled = true;
    document.getElementById("taskButton").innerHTML = "Task active";
    document.getElementById("taskDescription").innerHTML = "<strong><%= @task.description %></strong> <i>Clicks remaining: <%= @task.no_of_clicks %></i>";
    coverElement.select("rect")
      .style("fill", "none");
    coverElement.select("text")
      .remove();
    addClickLayer(selected_svg);
    s1.Start();
  }

  function recordResult(coordinates) {
    s1.Stop();
    var time = s1.ElapsedMilliseconds;

    var singleResult = {
      "time": time,
      "coordinates": coordinates
    }

    results[numberOfClicks] = singleResult;

    numberOfClicks += 1;
    document.getElementById("taskDescription").innerHTML = "<strong><%= @task.description %></strong> <i>Clicks remaining: " + (numberOfClicksAllowed - numberOfClicks) + "</i>";
    if (numberOfClicks === numberOfClicksAllowed) {
      stopTask();
    }
  }

  function stopTask() {
    taskActive = false;
    displayResults(true, results);
    results = {};
    numberOfClicks = 0;
    document.getElementById("taskButton").innerHTML = "Task Complete";
    document.getElementById("json_submit").style.display = "inline-block";
  }

  function displayResults(display_bool, results) {
      var results_html = "<table class='table'><tr>" +
      "<td><strong>No.</strong></td>" +
      "<td><strong>Coordinates (pixels)</strong></td>" +
      "<td><strong>Time (ms)</strong></td>" +
      "</tr>"
      for (var key in results) {
        var results_row = "<tr>" +
        "<td>" + key + "</td>" +
        "<td>(" + results[key].coordinates[0] + ", " + results[key].coordinates[1] + ")</td>" +
        "<td>" + results[key].time + "</td></tr>";
        results_html += results_row;
      }
      if (display_bool) {
        document.getElementById("results").innerHTML = results_html + "</table>";
      }
      document.getElementById("request_result").value = JSON.stringify(results);
  }

  function addClickLayer(selected_svg) {
    selected_svg.on("click", function() {
        if (taskActive) {
          recordResult(d3.mouse(this));
          drawCircle(selected_svg, d3.mouse(this)[0], d3.mouse(this)[1], 5);
        }
    });
  }

  function init() {
    selected_svg = d3.select("svg");

    var h = selected_svg.attr("height");
    var w = selected_svg.attr("width");

    var cover = selected_svg.append("g");

    cover.append("rect")
       			.attr("x", 0)
       			.attr("y", 0)
       			.attr("height", h)
       			.attr("width", w)
       			.style("stroke", "black")
       			.style("fill", "#5D32EA")
       			.style("stroke-width", 1);

    cover.append("text")
            .attr("x", w/2)
            .attr("y", h/2)
            .attr("font-size", "1em")
            .attr("text-anchor", "middle")
            .style("fill", "white")
            .text("Click Start Task to reveal the visualisation and start the timer");

    coverElement = cover;

    document.getElementById("taskButton").disabled = false;
  }

  loadVisualisation(init);
</script>
